// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// -------------------- User Model --------------------
model User {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  clerkId           String             @unique // The Clerk user ID
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  // Relationships
  days              Day[]
  conversation      Conversation?
  cumulativeSchema  CumulativeSchema?
  chartConfigs      ChartTypeConfig[]
}

// -------------------- Day Model --------------------
model Day {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  date        String   @map("date")
  daySchema   Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationship to User
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date]) // Ensure each user only has one entry per date
}

// -------------------- Conversation Model (One Per User) --------------------
model Conversation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @unique @db.ObjectId
  messages   Json
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // One-to-One Relationship with User (Only Defined Here)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// -------------------- Cumulative Schema (One Per User) --------------------
model CumulativeSchema {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String  @unique @db.ObjectId
  schema    Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // One-to-One Relationship with User (Only Defined Here)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// -------------------- Chart Type Config (Many Per User) --------------------
model ChartTypeConfig {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String  @db.ObjectId
  keyName   String
  chartType String

  // Relationship to User
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Prevent duplicate chart configs per user
  @@unique([userId, keyName]) 
}
